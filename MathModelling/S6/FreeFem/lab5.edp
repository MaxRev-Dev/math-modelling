real t = 0, dt = 0.1, endT = 1., m = 10; 

func real eta(real t) { return -1/ (t+1);}
func real mu(real t) { return 0;}
func real solution(real t) { return (x-1)/(t+1);}

func real f(real t) { return (1-x)/ ((t+1)^2);}
func u0 = x-1;

mesh Th = square(20, 20, [x, 0.4* y]);

fespace Vh(Th, P2);
Vh u, v, exact=solution(endT), uOld = u0;

problem Problem(u, v)= int2d(Th)(dx(u) * dx(v) + dy(u) * dy(v))
+ int2d(Th)(u / dt * v)
- int2d(Th)(uOld / dt * v)
- int2d(Th)(f(t) * v)
+ on(4, u = eta(t))
+ on(2, u = mu(t));


for (int i = 0; i < m; i++){
    t += dt;
    Problem;
    uOld = u;
    plot(u, fill=true, value=true,wait=false);
}
plot(exact, fill=true, value=true,wait=true);